<?xml version="1.0" encoding="UTF-8"?>
<!--<configuration scan="true" scanPeriod="30 seconds">-->
<configuration scan="true">
    <appender name="console"
              class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS}|%-5level|%thread|%logger{36}:%line]\t%msg%n</pattern>
        </encoder>
    </appender>
    <!-- log4jdbc 옵션 설정 -->
    <logger name="jdbc" level="OFF"/>
    <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
    <logger name="jdbc.connection" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <!-- TODO @trace -->
    <!--<logger name="jdbc.sqlonly" level="INFO"/>-->
    <!--    <logger name="jdbc.sqlonly" level="OFF" additivity="false">-->
    <logger name="jdbc.sqlonly" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
    <!-- TODO @trace -->
    <!--<logger name="jdbc.resultsettable" level="debug"/>-->
    <logger name="jdbc.resultsettable" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <root level="DEBUG">
        <appender-ref ref="console"/>
    </root>
</configuration>